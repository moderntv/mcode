<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="ModernTv">
	<description>ModernTV</description>

	<config name="php_version" value="70400"/>

	<arg value="p"/>
	<arg value="s"/>
	<arg name="colors"/>
	<arg name="encoding" value="utf-8"/>

	<!-- Generic -->

	<rule ref="Generic.Files.OneObjectStructurePerFile"/>
	<rule ref="Generic.PHP.DeprecatedFunctions"/>
	<rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
	<rule ref="Generic.Classes.DuplicateClassName"/>
	<rule ref="Generic.CodeAnalysis.EmptyStatement">
		<exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedCatch"/>
	</rule>
	<rule ref="Generic.PHP.DisallowAlternativePHPTags"/>
	<rule ref="Generic.PHP.DisallowShortOpenTag"/>
	<rule ref="Generic.PHP.DisallowShortOpenTag.EchoFound">
		<severity>5</severity>
	</rule>
	<rule ref="Generic.Files.ByteOrderMark"/>
	<rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>
	<rule ref="Generic.Files.LineEndings">
		<properties>
			<property name="eolChar" value="\n"/>
		</properties>
	</rule>
	<rule ref="Generic.PHP.LowerCaseKeyword"/>
	<rule ref="Generic.PHP.LowerCaseConstant"/>
	<rule ref="Generic.PHP.LowerCaseType"/>
	<rule ref="Generic.WhiteSpace.IncrementDecrementSpacing"/>
	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="ignoreIndentationTokens" type="array">
				<element value="T_COMMENT"/>
				<element value="T_DOC_COMMENT_OPEN_TAG"/>
			</property>
		</properties>
	</rule>
	<rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
	<rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>
	<rule ref="Generic.PHP.ForbiddenFunctions">
		<properties>
			<property name="forbiddenFunctions" type="array">
				<element key="d" value="null"/>
				<element key="dd" value="null"/>
				<element key="bd" value="null"/>
				<element key="bdc" value="null"/>
				<element key="bdd" value="null"/>
				<element key="t" value="null"/>
				<element key="dt" value="null"/>
				<element key="dump" value="null"/>
				<element key="bdump" value="null"/>
				<element key="dumpe" value="null"/>
			</property>
		</properties>
	</rule>
	<rule ref="Generic.PHP.DeprecatedFunctions"/>
	<rule ref="Generic.PHP.ForbiddenFunctions">
		<properties>
			<property name="forbiddenFunctions" type="array">
				<element key="chop" value="rtrim"/>
				<element key="close" value="closedir"/>
				<element key="compact" value="null"/>
				<element key="delete" value="unset"/>
				<element key="doubleval" value="floatval"/>
				<element key="extract" value="null"/>
				<element key="fputs" value="fwrite"/>
				<element key="ini_alter" value="ini_set"/>
				<element key="is_double" value="is_float"/>
				<element key="is_integer" value="is_int"/>
				<element key="is_long" value="is_int"/>
				<element key="is_null" value="null"/>
				<element key="is_real" value="is_float"/>
				<element key="is_writeable" value="is_writable"/>
				<element key="join" value="implode"/>
				<element key="key_exists" value="array_key_exists"/>
				<element key="pos" value="current"/>
				<element key="settype" value="null"/>
				<element key="show_source" value="highlight_file"/>
				<element key="sizeof" value="count"/>
				<element key="strchr" value="strstr"/>
				<element key="user_error" value="trigger_error"/>
			</property>
		</properties>
	</rule>
	<rule ref="Generic.Files.InlineHTML"/>
	<rule ref="Generic.Formatting.SpaceAfterCast">
		<properties>
			<property name="spacing" value="1"/>
		</properties>
	</rule>
	<rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
	<rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>
	<rule ref="Generic.PHP.BacktickOperator"/>
	<rule ref="Generic.PHP.SAPIUsage"/>

	<!-- /Generic -->

	<!-- Squiz -->

	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
		<properties>
			<property name="ignoreBlankLines" value="false"/>
		</properties>
	</rule>
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
		<severity>5</severity>
	</rule>
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.StartFile">
		<severity>5</severity>
	</rule>
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EndFile">
		<severity>5</severity>
	</rule>
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
		<severity>5</severity>
	</rule>
	<rule ref="Squiz.Scope.MethodScope"/>
	<rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
	<rule ref="Squiz.WhiteSpace.CastSpacing"/>
	<rule ref="Squiz.Functions.FunctionDeclaration"/>
	<rule ref="Squiz.Functions.FunctionDeclaration"/>
	<rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace"/>
	<rule ref="Squiz.WhiteSpace.CastSpacing"/>
	<rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace"/>
	<rule ref="Squiz.WhiteSpace.FunctionSpacing">
		<properties>
			<property name="spacing" value="1"/>
		</properties>
	</rule>
	<rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
	<rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
	<rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing">
		<exclude name="Squiz.WhiteSpace.ObjectOperatorSpacing.Before"/>
	</rule>
	<rule ref="Squiz.WhiteSpace.OperatorSpacing">
		<properties>
			<property name="ignoreNewlines" value="true"/>
		</properties>
	</rule>
	<rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
	<rule ref="Squiz.PHP.NonExecutableCode"/>
	<rule ref="Squiz.Operators.ValidLogicalOperators"/>
	<rule ref="Squiz.PHP.LowercasePHPFunctions"/>
	<rule ref="Squiz.Scope.StaticThisUsage"/>
	<rule ref="Squiz.PHP.GlobalKeyword"/>
	<rule ref="Squiz.PHP.InnerFunctions"/>
	<rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
	<rule ref="Squiz.Classes.ClassFileName"/>
	<rule ref="Squiz.Classes.SelfMemberReference"/>

	<!-- /Squiz-->

	<!-- PEAR -->

	<rule ref="PEAR.Classes.ClassDeclaration"/>
	<rule ref="PEAR.Functions.ValidDefaultValue"/>
	<rule ref="PEAR.Commenting.InlineComment"/>
	<rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>

	<!-- /PEAR -->

	<!-- PSR-2 -->

	<rule ref="PSR2.Files.EndFileNewline"/>
	<rule ref="PSR2.Files.ClosingTag"/>
	<rule ref="PSR2.Classes.PropertyDeclaration"/>
	<rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
	<rule ref="PSR2.Namespaces.UseDeclaration"/>
	<rule ref="PSR2.Methods.FunctionClosingBrace"/>
	<rule ref="PSR2.ControlStructures.ElseIfDeclaration.NotAllowed">
		<type>error</type>
	</rule>

	<!-- /PSR-2 -->

	<!-- PSR-12 -->

	<rule ref="PSR12.Properties.ConstantVisibility">
		<severity>5</severity>
	</rule>
	<rule ref="PSR12.Keywords.ShortFormTypeKeywords">
		<severity>5</severity>
	</rule>

	<!-- /PSR-12 -->

	<!-- Slevomat -->

	<rule ref="SlevomatCodingStandard.Namespaces.DisallowGroupUse"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UseFromSameNamespace"/>
	<rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>
	<rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility"/>
	<rule ref="SlevomatCodingStandard.Namespaces.MultipleUsesPerLine"/>
	<rule ref="SlevomatCodingStandard.Commenting.ForbiddenComments"/>
	<rule ref="SlevomatCodingStandard.Classes.DisallowMultiConstantDefinition"/>
	<rule ref="SlevomatCodingStandard.Classes.DisallowMultiPropertyDefinition"/>
	<rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable"/>
	<rule ref="SlevomatCodingStandard.Commenting.ForbiddenComments">
		<properties>
			<property name="forbiddenCommentPatterns" type="array">
				<element value="~^(?:(?!private|protected|static)\S+ )?(?:con|de)structor\.\z~i"/>
				<element value="~^Created by \S+\.\z~i"/>
				<element value="~^\S+ [gs]etter\.\z~i"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
		<properties>
			<property name="searchAnnotations" value="true"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Namespaces.UseFromSameNamespace"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UselessAlias"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.DisallowYodaComparison"/>
	<rule ref="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation"/>
	<rule ref="SlevomatCodingStandard.Classes.DisallowLateStaticBindingForConstants"/>
	<rule ref="SlevomatCodingStandard.Functions.UnusedInheritedVariablePassedToClosure"/>
	<rule ref="SlevomatCodingStandard.Functions.UselessParameterDefaultValue"/>
	<rule ref="SlevomatCodingStandard.Classes.TraitUseDeclaration"/>
	<rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing"/>
	<rule ref="SlevomatCodingStandard.Classes.ModernClassNameReference">
		<properties>
			<property name="enableOnObjects" value="false"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Classes.SuperfluousTraitNaming"/>
	<rule ref="SlevomatCodingStandard.Classes.UselessLateStaticBinding"/>
	<rule ref="SlevomatCodingStandard.PHP.ShortList"/>
	<rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint">
		<properties>
			<property name="traversableTypeHints" type="array">
				<element value="Traversable"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint">
		<properties>
			<property name="traversableTypeHints" type="array">
				<element value="Traversable"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint">
		<properties>
			<property name="traversableTypeHints" type="array">
				<element value="Traversable"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Commenting.UselessFunctionDocComment">
		<properties>
			<property name="traversableTypeHints" type="array">
				<element value="Traversable"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints"/>
	<rule ref="SlevomatCodingStandard.TypeHints.NullTypeHintOnLastPosition"/>
	<rule ref="SlevomatCodingStandard.PHP.TypeCast"/>
	<rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing"/>
	<rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing"/>
	<rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHintSpacing"/>
	<rule ref="SlevomatCodingStandard.Namespaces.NamespaceDeclaration"/>
	<rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
		<properties>
			<property name="declareOnFirstLine" value="false"/>
			<property name="linesCountBeforeDeclare" value="1"/>
			<property name="linesCountAfterDeclare" value="1"/>
			<property name="spacesCountAroundEqualsSign" value="1"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Classes.ClassStructure">
		<properties>
			<property name="enableFinalMethods" value="true"/>
			<property name="groups" type="array">
				<element value="uses"/>

				<element value="public constants"/>
				<element value="protected constants"/>
				<element value="private constants"/>

				<element value="public static properties"/>
				<element value="public properties"/>

				<element value="protected static properties"/>
				<element value="protected properties"/>

				<element value="private static properties"/>
				<element value="private properties"/>

				<element value="constructor"/>
				<element value="destructor"/>

				<element value="static constructors"/>

				<element value="public static abstract methods"/>
				<element value="public static final methods"/>
				<element value="public static methods"/>
				<element value="public abstract methods"/>
				<element value="public final methods"/>
				<element value="public methods"/>

				<element value="protected static abstract methods"/>
				<element value="protected static final methods"/>
				<element value="protected static methods"/>
				<element value="protected abstract methods"/>
				<element value="protected final methods"/>
				<element value="protected methods"/>

				<element value="private static methods"/>
				<element value="private methods"/>

				<element value="magic methods"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Classes.EmptyLinesAroundClassBraces">
		<properties>
			<property name="linesCountAfterOpeningBrace" value="1"/>
			<property name="linesCountBeforeClosingBrace" value="1"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Classes.TraitUseSpacing">
		<properties>
			<property name="linesCountAfterLastUse" value="1"/>
			<property name="linesCountAfterLastUseWhenLastInClass" value="1"/>
			<property name="linesCountBeforeFirstUse" value="1"/>
			<property name="linesCountBetweenUses" value="1"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Commenting.ForbiddenAnnotations">
		<properties>
			<property name="forbiddenAnnotations" type="array">
				<element value="@api"/>
				<element value="@author"/>
				<element value="@category"/>
				<element value="@copyright"/>
				<element value="@created"/>
				<element value="@license"/>
				<element value="@package"/>
				<element value="@since"/>
				<element value="@subpackage"/>
				<element value="@version"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Commenting.EmptyComment"/>
	<rule ref="SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.LanguageConstructWithParentheses"/>
	<rule ref="SlevomatCodingStandard.Functions.StaticClosure"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.UselessTernaryOperator"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UseFromSameNamespace"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UseSpacing">
		<properties>
			<property name="linesCountAfterLastUse" value="1"/>
			<property name="linesCountBeforeFirstUse" value="1"/>
			<property name="linesCountBetweenUseTypes" value="1"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Namespaces.UselessAlias"/>
	<rule ref="SlevomatCodingStandard.PHP.UselessParentheses"/>
	<rule ref="SlevomatCodingStandard.PHP.UselessSemicolon"/>
	<rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue"/>
	<rule ref="SlevomatCodingStandard.TypeHints.UselessConstantTypeHint"/>
	<rule ref="SlevomatCodingStandard.Commenting.UselessInheritDocComment"/>
	<rule ref="SlevomatCodingStandard.Variables.UselessVariable"/>
	<rule ref="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration">
		<properties>
			<property name="allowAboveNonAssignment" value="true"/>
			<property name="allowDocCommentAboveReturn" value="true"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Classes.PropertySpacing">
		<properties>
			<property name="minLinesCountBeforeWithComment" value="1"/>
			<property name="maxLinesCountBeforeWithComment" value="1"/>
			<property name="minLinesCountBeforeWithoutComment" value="1"/>
			<property name="maxLinesCountBeforeWithoutComment" value="1"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing">
		<exclude name="SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeControlStructure" />
		<exclude name="SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing.IncorrectLinesCountBeforeFirstControlStructure" />
		<properties>
			<property name="controlStructures" type="array">
				<element value="if" />
				<element value="do" />
				<element value="while" />
				<element value="for" />
				<element value="foreach" />
				<element value="switch" />
				<element value="try" />
				<element value="default" />
			</property>
		</properties>
	</rule>

	<!-- /Slevomat -->

</ruleset>
